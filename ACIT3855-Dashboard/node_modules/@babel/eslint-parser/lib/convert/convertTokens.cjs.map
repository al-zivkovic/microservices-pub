<<<<<<< HEAD
{"version":3,"names":["ESLINT_VERSION","require","convertTemplateType","tokens","tl","curlyBrace","templateTokens","result","addTemplateType","start","end","length","value","reduce","token","type","label","template","push","loc","forEach","backQuote","dollarBraceL","braceR","convertToken","source","range","name","semi","comma","parenL","parenR","braceL","slash","dot","bracketL","bracketR","ellipsis","arrow","pipeline","star","incDec","colon","question","at","logicalOR","logicalAND","nullishCoalescing","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","exponent","bang","tilde","doubleColon","hash","questionDot","braceHashL","braceBarL","braceBarR","bracketHashL","bracketBarL","bracketBarR","doubleCaret","doubleAt","isAssign","_token$value","jsxTagStart","jsxTagEnd","jsxName","jsxText","keyword","num","slice","string","regexp","regex","pattern","flags","bigint","privateName","templateNonTail","templateTail","rightAssociative","module","exports","convertTokens","code","templateTypeMergedTokens","i","tokenType","nextToken","column"],"sources":["../../src/convert/convertTokens.cjs"],"sourcesContent":["const ESLINT_VERSION = require(\"../utils/eslint-version.cjs\");\n\nfunction convertTemplateType(tokens, tl) {\n  let curlyBrace = null;\n  let templateTokens = [];\n  const result = [];\n\n  function addTemplateType() {\n    const start = templateTokens[0];\n    const end = templateTokens[templateTokens.length - 1];\n\n    const value = templateTokens.reduce((result, token) => {\n      if (token.value) {\n        result += token.value;\n      } else if (token.type.label !== tl.template) {\n        result += token.type.label;\n      }\n\n      return result;\n    }, \"\");\n\n    result.push({\n      type: \"Template\",\n      value: value,\n      start: start.start,\n      end: end.end,\n      loc: {\n        start: start.loc.start,\n        end: end.loc.end,\n      },\n    });\n\n    templateTokens = [];\n  }\n\n  tokens.forEach(token => {\n    switch (token.type.label) {\n      case tl.backQuote:\n        if (curlyBrace) {\n          result.push(curlyBrace);\n          curlyBrace = null;\n        }\n\n        templateTokens.push(token);\n\n        if (templateTokens.length > 1) {\n          addTemplateType();\n        }\n\n        break;\n\n      case tl.dollarBraceL:\n        templateTokens.push(token);\n        addTemplateType();\n        break;\n\n      case tl.braceR:\n        if (curlyBrace) {\n          result.push(curlyBrace);\n        }\n\n        curlyBrace = token;\n        break;\n\n      case tl.template:\n        if (curlyBrace) {\n          templateTokens.push(curlyBrace);\n          curlyBrace = null;\n        }\n\n        templateTokens.push(token);\n        break;\n\n      default:\n        if (curlyBrace) {\n          result.push(curlyBrace);\n          curlyBrace = null;\n        }\n\n        result.push(token);\n    }\n  });\n\n  return result;\n}\n\nfunction convertToken(token, source, tl) {\n  const { type } = token;\n  const { label } = type;\n  token.range = [token.start, token.end];\n\n  if (label === tl.name) {\n    if (token.value === \"static\") {\n      token.type = \"Keyword\";\n    } else {\n      token.type = \"Identifier\";\n    }\n  } else if (\n    label === tl.semi ||\n    label === tl.comma ||\n    label === tl.parenL ||\n    label === tl.parenR ||\n    label === tl.braceL ||\n    label === tl.braceR ||\n    label === tl.slash ||\n    label === tl.dot ||\n    label === tl.bracketL ||\n    label === tl.bracketR ||\n    label === tl.ellipsis ||\n    label === tl.arrow ||\n    label === tl.pipeline ||\n    label === tl.star ||\n    label === tl.incDec ||\n    label === tl.colon ||\n    label === tl.question ||\n    label === tl.template ||\n    label === tl.backQuote ||\n    label === tl.dollarBraceL ||\n    label === tl.at ||\n    label === tl.logicalOR ||\n    label === tl.logicalAND ||\n    label === tl.nullishCoalescing ||\n    label === tl.bitwiseOR ||\n    label === tl.bitwiseXOR ||\n    label === tl.bitwiseAND ||\n    label === tl.equality ||\n    label === tl.relational ||\n    label === tl.bitShift ||\n    label === tl.plusMin ||\n    label === tl.modulo ||\n    label === tl.exponent ||\n    label === tl.bang ||\n    label === tl.tilde ||\n    label === tl.doubleColon ||\n    label === tl.hash ||\n    label === tl.questionDot ||\n    label === tl.braceHashL ||\n    label === tl.braceBarL ||\n    label === tl.braceBarR ||\n    label === tl.bracketHashL ||\n    label === tl.bracketBarL ||\n    label === tl.bracketBarR ||\n    label === tl.doubleCaret ||\n    label === tl.doubleAt ||\n    type.isAssign\n  ) {\n    token.type = \"Punctuator\";\n    token.value ??= label;\n  } else if (label === tl.jsxTagStart) {\n    token.type = \"Punctuator\";\n    token.value = \"<\";\n  } else if (label === tl.jsxTagEnd) {\n    token.type = \"Punctuator\";\n    token.value = \">\";\n  } else if (label === tl.jsxName) {\n    token.type = \"JSXIdentifier\";\n  } else if (label === tl.jsxText) {\n    token.type = \"JSXText\";\n  } else if (type.keyword === \"null\") {\n    token.type = \"Null\";\n  } else if (type.keyword === \"false\" || type.keyword === \"true\") {\n    token.type = \"Boolean\";\n  } else if (type.keyword) {\n    token.type = \"Keyword\";\n  } else if (label === tl.num) {\n    token.type = \"Numeric\";\n    token.value = source.slice(token.start, token.end);\n  } else if (label === tl.string) {\n    token.type = \"String\";\n    token.value = source.slice(token.start, token.end);\n  } else if (label === tl.regexp) {\n    token.type = \"RegularExpression\";\n    const value = token.value;\n    token.regex = {\n      pattern: value.pattern,\n      flags: value.flags,\n    };\n    token.value = `/${value.pattern}/${value.flags}`;\n  } else if (label === tl.bigint) {\n    token.type = \"Numeric\";\n    token.value = `${token.value}n`;\n  } else if (label === tl.privateName) {\n    token.type = \"PrivateIdentifier\";\n  } else if (label === tl.templateNonTail || label === tl.templateTail) {\n    token.type = \"Template\";\n  }\n\n  if (typeof token.type !== \"string\") {\n    // Acorn does not have rightAssociative\n    delete token.type.rightAssociative;\n  }\n}\n\nmodule.exports = function convertTokens(tokens, code, tl) {\n  const result = [];\n  const templateTypeMergedTokens = process.env.BABEL_8_BREAKING\n    ? tokens\n    : convertTemplateType(tokens, tl);\n  // The last token is always tt.eof and should be skipped\n  for (let i = 0, { length } = templateTypeMergedTokens; i < length - 1; i++) {\n    const token = templateTypeMergedTokens[i];\n    const tokenType = token.type;\n    if (tokenType === \"CommentLine\" || tokenType === \"CommentBlock\") {\n      continue;\n    }\n\n    if (!process.env.BABEL_8_BREAKING) {\n      // Babel 8 already produces a single token\n\n      if (\n        ESLINT_VERSION >= 8 &&\n        i + 1 < length &&\n        tokenType.label === tl.hash\n      ) {\n        const nextToken = templateTypeMergedTokens[i + 1];\n\n        // We must disambiguate private identifier from the hack pipes topic token\n        if (nextToken.type.label === tl.name && token.end === nextToken.start) {\n          i++;\n\n          nextToken.type = \"PrivateIdentifier\";\n          nextToken.start -= 1;\n          nextToken.loc.start.column -= 1;\n          nextToken.range = [nextToken.start, nextToken.end];\n\n          result.push(nextToken);\n          continue;\n        }\n      }\n    }\n\n    convertToken(token, code, tl);\n    result.push(token);\n  }\n\n  return result;\n};\n"],"mappings":"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"}
=======
{"version":3,"names":["ESLINT_VERSION","require","convertTemplateType","tokens","tl","curlyBrace","templateTokens","result","addTemplateType","start","end","length","value","reduce","token","type","label","template","push","loc","forEach","backQuote","dollarBraceL","braceR","convertToken","source","range","name","semi","comma","parenL","parenR","braceL","slash","dot","bracketL","bracketR","ellipsis","arrow","pipeline","star","incDec","colon","question","at","logicalOR","logicalAND","nullishCoalescing","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","exponent","bang","tilde","doubleColon","hash","questionDot","braceHashL","braceBarL","braceBarR","bracketHashL","bracketBarL","bracketBarR","doubleCaret","doubleAt","isAssign","jsxTagStart","jsxTagEnd","jsxName","jsxText","keyword","num","slice","string","regexp","regex","pattern","flags","bigint","privateName","templateNonTail","templateTail","rightAssociative","module","exports","convertTokens","code","templateTypeMergedTokens","i","tokenType","nextToken","column"],"sources":["../../src/convert/convertTokens.cjs"],"sourcesContent":["const ESLINT_VERSION = require(\"../utils/eslint-version.cjs\");\n\nfunction convertTemplateType(tokens, tl) {\n  let curlyBrace = null;\n  let templateTokens = [];\n  const result = [];\n\n  function addTemplateType() {\n    const start = templateTokens[0];\n    const end = templateTokens[templateTokens.length - 1];\n\n    const value = templateTokens.reduce((result, token) => {\n      if (token.value) {\n        result += token.value;\n      } else if (token.type.label !== tl.template) {\n        result += token.type.label;\n      }\n\n      return result;\n    }, \"\");\n\n    result.push({\n      type: \"Template\",\n      value: value,\n      start: start.start,\n      end: end.end,\n      loc: {\n        start: start.loc.start,\n        end: end.loc.end,\n      },\n    });\n\n    templateTokens = [];\n  }\n\n  tokens.forEach(token => {\n    switch (token.type.label) {\n      case tl.backQuote:\n        if (curlyBrace) {\n          result.push(curlyBrace);\n          curlyBrace = null;\n        }\n\n        templateTokens.push(token);\n\n        if (templateTokens.length > 1) {\n          addTemplateType();\n        }\n\n        break;\n\n      case tl.dollarBraceL:\n        templateTokens.push(token);\n        addTemplateType();\n        break;\n\n      case tl.braceR:\n        if (curlyBrace) {\n          result.push(curlyBrace);\n        }\n\n        curlyBrace = token;\n        break;\n\n      case tl.template:\n        if (curlyBrace) {\n          templateTokens.push(curlyBrace);\n          curlyBrace = null;\n        }\n\n        templateTokens.push(token);\n        break;\n\n      default:\n        if (curlyBrace) {\n          result.push(curlyBrace);\n          curlyBrace = null;\n        }\n\n        result.push(token);\n    }\n  });\n\n  return result;\n}\n\nfunction convertToken(token, source, tl) {\n  const { type } = token;\n  const { label } = type;\n  token.range = [token.start, token.end];\n\n  if (label === tl.name) {\n    if (token.value === \"static\") {\n      token.type = \"Keyword\";\n    } else {\n      token.type = \"Identifier\";\n    }\n  } else if (\n    label === tl.semi ||\n    label === tl.comma ||\n    label === tl.parenL ||\n    label === tl.parenR ||\n    label === tl.braceL ||\n    label === tl.braceR ||\n    label === tl.slash ||\n    label === tl.dot ||\n    label === tl.bracketL ||\n    label === tl.bracketR ||\n    label === tl.ellipsis ||\n    label === tl.arrow ||\n    label === tl.pipeline ||\n    label === tl.star ||\n    label === tl.incDec ||\n    label === tl.colon ||\n    label === tl.question ||\n    label === tl.template ||\n    label === tl.backQuote ||\n    label === tl.dollarBraceL ||\n    label === tl.at ||\n    label === tl.logicalOR ||\n    label === tl.logicalAND ||\n    label === tl.nullishCoalescing ||\n    label === tl.bitwiseOR ||\n    label === tl.bitwiseXOR ||\n    label === tl.bitwiseAND ||\n    label === tl.equality ||\n    label === tl.relational ||\n    label === tl.bitShift ||\n    label === tl.plusMin ||\n    label === tl.modulo ||\n    label === tl.exponent ||\n    label === tl.bang ||\n    label === tl.tilde ||\n    label === tl.doubleColon ||\n    label === tl.hash ||\n    label === tl.questionDot ||\n    label === tl.braceHashL ||\n    label === tl.braceBarL ||\n    label === tl.braceBarR ||\n    label === tl.bracketHashL ||\n    label === tl.bracketBarL ||\n    label === tl.bracketBarR ||\n    label === tl.doubleCaret ||\n    label === tl.doubleAt ||\n    type.isAssign\n  ) {\n    token.type = \"Punctuator\";\n    token.value ??= label;\n  } else if (label === tl.jsxTagStart) {\n    token.type = \"Punctuator\";\n    token.value = \"<\";\n  } else if (label === tl.jsxTagEnd) {\n    token.type = \"Punctuator\";\n    token.value = \">\";\n  } else if (label === tl.jsxName) {\n    token.type = \"JSXIdentifier\";\n  } else if (label === tl.jsxText) {\n    token.type = \"JSXText\";\n  } else if (type.keyword === \"null\") {\n    token.type = \"Null\";\n  } else if (type.keyword === \"false\" || type.keyword === \"true\") {\n    token.type = \"Boolean\";\n  } else if (type.keyword) {\n    token.type = \"Keyword\";\n  } else if (label === tl.num) {\n    token.type = \"Numeric\";\n    token.value = source.slice(token.start, token.end);\n  } else if (label === tl.string) {\n    token.type = \"String\";\n    token.value = source.slice(token.start, token.end);\n  } else if (label === tl.regexp) {\n    token.type = \"RegularExpression\";\n    const value = token.value;\n    token.regex = {\n      pattern: value.pattern,\n      flags: value.flags,\n    };\n    token.value = `/${value.pattern}/${value.flags}`;\n  } else if (label === tl.bigint) {\n    token.type = \"Numeric\";\n    token.value = `${token.value}n`;\n  } else if (label === tl.privateName) {\n    token.type = \"PrivateIdentifier\";\n  } else if (label === tl.templateNonTail || label === tl.templateTail) {\n    token.type = \"Template\";\n  }\n\n  if (typeof token.type !== \"string\") {\n    // Acorn does not have rightAssociative\n    delete token.type.rightAssociative;\n  }\n}\n\nmodule.exports = function convertTokens(tokens, code, tl) {\n  const result = [];\n  const templateTypeMergedTokens = process.env.BABEL_8_BREAKING\n    ? tokens\n    : convertTemplateType(tokens, tl);\n  // The last token is always tt.eof and should be skipped\n  for (let i = 0, { length } = templateTypeMergedTokens; i < length - 1; i++) {\n    const token = templateTypeMergedTokens[i];\n    const tokenType = token.type;\n    if (tokenType === \"CommentLine\" || tokenType === \"CommentBlock\") {\n      continue;\n    }\n\n    if (!process.env.BABEL_8_BREAKING) {\n      // Babel 8 already produces a single token\n\n      if (\n        ESLINT_VERSION >= 8 &&\n        i + 1 < length &&\n        tokenType.label === tl.hash\n      ) {\n        const nextToken = templateTypeMergedTokens[i + 1];\n\n        // We must disambiguate private identifier from the hack pipes topic token\n        if (nextToken.type.label === tl.name && token.end === nextToken.start) {\n          i++;\n\n          nextToken.type = \"PrivateIdentifier\";\n          nextToken.start -= 1;\n          nextToken.loc.start.column -= 1;\n          nextToken.range = [nextToken.start, nextToken.end];\n\n          result.push(nextToken);\n          continue;\n        }\n      }\n    }\n\n    convertToken(token, code, tl);\n    result.push(token);\n  }\n\n  return result;\n};\n"],"mappings":"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"}
>>>>>>> 673f6c3a713c3c5a521125c5e4ea6135afefe034
