<<<<<<< HEAD
{"version":3,"names":["semver","require","convert","babelParser","v","w","split","process","versions","node","resolve","r","paths","b","M","f","_findPath","_nodeModulePaths","concat","Error","code","isRunningMinSupportedCoreVersion","module","exports","parse","options","client","minSupportedCoreVersion","satisfies","getVersion","ast","parserOptions","maybeParse","getTokLabels","getVisitorKeys","err","error"],"sources":["../src/parse.cjs"],"sourcesContent":["\"use strict\";\n\nconst semver = require(\"semver\");\nconst convert = require(\"./convert/index.cjs\");\n\nconst babelParser = require(require.resolve(\"@babel/parser\", {\n  paths: [require.resolve(\"@babel/core/package.json\")],\n}));\n\nlet isRunningMinSupportedCoreVersion = null;\n\nmodule.exports = function parse(code, options, client) {\n  // Ensure we're using a version of `@babel/core` that includes `parse()` and `tokTypes`.\n  const minSupportedCoreVersion = \">=7.2.0\";\n\n  if (typeof isRunningMinSupportedCoreVersion !== \"boolean\") {\n    isRunningMinSupportedCoreVersion = semver.satisfies(\n      client.getVersion(),\n      minSupportedCoreVersion,\n    );\n  }\n\n  if (!isRunningMinSupportedCoreVersion) {\n    throw new Error(\n      `@babel/eslint-parser@${\n        PACKAGE_JSON.version\n      } does not support @babel/core@${client.getVersion()}. Please upgrade to @babel/core@${minSupportedCoreVersion}.`,\n    );\n  }\n\n  const { ast, parserOptions } = client.maybeParse(code, options);\n\n  if (ast) return ast;\n\n  try {\n    return convert.ast(\n      babelParser.parse(code, parserOptions),\n      code,\n      client.getTokLabels(),\n      client.getVisitorKeys(),\n    );\n  } catch (err) {\n    throw convert.error(err);\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAE9C,MAAME,WAAW,GAAGF,OAAO,CAAC,GAAAG,CAAA,EAAAC,CAAA,MAAAD,CAAA,GAAAA,CAAA,CAAAE,KAAA,OAAAD,CAAA,GAAAA,CAAA,CAAAC,KAAA,QAAAF,CAAA,OAAAC,CAAA,OAAAD,CAAA,OAAAC,CAAA,QAAAD,CAAA,QAAAC,CAAA,MAAAE,OAAA,CAAAC,QAAA,CAAAC,IAAA,WAAAR,OAAA,CAAAS,OAAA,IAAAC,CAAA;EAAAC,KAAA,GAAAC,CAAA;AAAA,GAAAC,CAAA,GAAAb,OAAA;EAAA,IAAAc,CAAA,GAAAD,CAAA,CAAAE,SAAA,CAAAL,CAAA,EAAAG,CAAA,CAAAG,gBAAA,CAAAJ,CAAA,EAAAK,MAAA,CAAAL,CAAA;EAAA,IAAAE,CAAA,SAAAA,CAAA;EAAAA,CAAA,OAAAI,KAAA,2BAAAR,CAAA;EAAAI,CAAA,CAAAK,IAAA;EAAA,MAAAL,CAAA;AAAA,GAAgB,eAAe,EAAE;EAC3DH,KAAK,EAAE,CAACX,OAAO,CAACS,OAAO,CAAC,0BAA0B,CAAC;AACrD,CAAC,CAAC,CAAC;AAEH,IAAIW,gCAAgC,GAAG,IAAI;AAE3CC,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACJ,IAAI,EAAEK,OAAO,EAAEC,MAAM,EAAE;EAErD,MAAMC,uBAAuB,GAAG,SAAS;EAEzC,IAAI,OAAON,gCAAgC,KAAK,SAAS,EAAE;IACzDA,gCAAgC,GAAGrB,MAAM,CAAC4B,SAAS,CACjDF,MAAM,CAACG,UAAU,EAAE,EACnBF,uBAAuB,CACxB;EACH;EAEA,IAAI,CAACN,gCAAgC,EAAE;IACrC,MAAM,IAAIF,KAAK,CACZ,wBAAqB,QAErB,iCAAgCO,MAAM,CAACG,UAAU,EAAG,mCAAkCF,uBAAwB,GAAE,CAClH;EACH;EAEA,MAAM;IAAEG,GAAG;IAAEC;EAAc,CAAC,GAAGL,MAAM,CAACM,UAAU,CAACZ,IAAI,EAAEK,OAAO,CAAC;EAE/D,IAAIK,GAAG,EAAE,OAAOA,GAAG;EAEnB,IAAI;IACF,OAAO5B,OAAO,CAAC4B,GAAG,CAChB3B,WAAW,CAACqB,KAAK,CAACJ,IAAI,EAAEW,aAAa,CAAC,EACtCX,IAAI,EACJM,MAAM,CAACO,YAAY,EAAE,EACrBP,MAAM,CAACQ,cAAc,EAAE,CACxB;EACH,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMjC,OAAO,CAACkC,KAAK,CAACD,GAAG,CAAC;EAC1B;AACF,CAAC"}
=======
{"version":3,"names":["semver","require","convert","babelParser","paths","resolve","isRunningMinSupportedCoreVersion","module","exports","parse","code","options","client","minSupportedCoreVersion","satisfies","getVersion","Error","ast","parserOptions","maybeParse","getTokLabels","getVisitorKeys","err","error"],"sources":["../src/parse.cjs"],"sourcesContent":["\"use strict\";\n\nconst semver = require(\"semver\");\nconst convert = require(\"./convert/index.cjs\");\n\nconst babelParser = require(require.resolve(\"@babel/parser\", {\n  paths: [require.resolve(\"@babel/core/package.json\")],\n}));\n\nlet isRunningMinSupportedCoreVersion = null;\n\nmodule.exports = function parse(code, options, client) {\n  // Ensure we're using a version of `@babel/core` that includes `parse()` and `tokTypes`.\n  const minSupportedCoreVersion = \">=7.2.0\";\n\n  if (typeof isRunningMinSupportedCoreVersion !== \"boolean\") {\n    isRunningMinSupportedCoreVersion = semver.satisfies(\n      client.getVersion(),\n      minSupportedCoreVersion,\n    );\n  }\n\n  if (!isRunningMinSupportedCoreVersion) {\n    throw new Error(\n      `@babel/eslint-parser@${\n        PACKAGE_JSON.version\n      } does not support @babel/core@${client.getVersion()}. Please upgrade to @babel/core@${minSupportedCoreVersion}.`,\n    );\n  }\n\n  const { ast, parserOptions } = client.maybeParse(code, options);\n\n  if (ast) return ast;\n\n  try {\n    return convert.ast(\n      babelParser.parse(code, parserOptions),\n      code,\n      client.getTokLabels(),\n      client.getVisitorKeys(),\n    );\n  } catch (err) {\n    throw convert.error(err);\n  }\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AAEA,MAAME,WAAW,GAAGF,OAAO,CAAC;EAAA;AAAA;EAAA;;EAAA;EAAA;EAAA;EAAA;AAAA,GAAgB,eAAhB,EAAiC;EAC3DG,KAAK,EAAE,CAACH,OAAO,CAACI,OAAR,CAAgB,0BAAhB,CAAD;AADoD,CAAjC,CAAD,CAA3B;;AAIA,IAAIC,gCAAgC,GAAG,IAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsC;EAErD,MAAMC,uBAAuB,GAAG,SAAhC;;EAEA,IAAI,OAAOP,gCAAP,KAA4C,SAAhD,EAA2D;IACzDA,gCAAgC,GAAGN,MAAM,CAACc,SAAP,CACjCF,MAAM,CAACG,UAAP,EADiC,EAEjCF,uBAFiC,CAAnC;EAID;;EAED,IAAI,CAACP,gCAAL,EAAuC;IACrC,MAAM,IAAIU,KAAJ,CACH,wBAAD,QAEC,iCAAgCJ,MAAM,CAACG,UAAP,EAAoB,mCAAkCF,uBAAwB,GAH3G,CAAN;EAKD;;EAED,MAAM;IAAEI,GAAF;IAAOC;EAAP,IAAyBN,MAAM,CAACO,UAAP,CAAkBT,IAAlB,EAAwBC,OAAxB,CAA/B;EAEA,IAAIM,GAAJ,EAAS,OAAOA,GAAP;;EAET,IAAI;IACF,OAAOf,OAAO,CAACe,GAAR,CACLd,WAAW,CAACM,KAAZ,CAAkBC,IAAlB,EAAwBQ,aAAxB,CADK,EAELR,IAFK,EAGLE,MAAM,CAACQ,YAAP,EAHK,EAILR,MAAM,CAACS,cAAP,EAJK,CAAP;EAMD,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZ,MAAMpB,OAAO,CAACqB,KAAR,CAAcD,GAAd,CAAN;EACD;AACF,CAjCD"}
>>>>>>> 673f6c3a713c3c5a521125c5e4ea6135afefe034
