<<<<<<< HEAD
{"version":3,"names":["babel","require","handleMessage","parentPort","addListener","_asyncToGenerator","signal","port","action","payload","response","init","result","error","errorData","Object","assign","postMessage","_unused","Error","close","Atomics","store","notify"],"sources":["../../src/worker/index.cjs"],"sourcesContent":["const babel = require(\"./babel-core.cjs\");\nconst handleMessage = require(\"./handle-message.cjs\");\n\nconst { parentPort } = require(\"worker_threads\");\n\nparentPort.addListener(\"message\", async ({ signal, port, action, payload }) => {\n  let response;\n\n  try {\n    if (babel.init) await babel.init;\n\n    response = { result: await handleMessage(action, payload) };\n  } catch (error) {\n    response = { error, errorData: { ...error } };\n  }\n\n  try {\n    port.postMessage(response);\n  } catch {\n    port.postMessage({\n      error: new Error(\"Cannot serialize worker response\"),\n    });\n  } finally {\n    port.close();\n    Atomics.store(signal, 0, 1);\n    Atomics.notify(signal, 0);\n  }\n});\n"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACzC,MAAMC,aAAa,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAErD,MAAM;EAAEE;AAAW,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAEhDE,UAAU,CAACC,WAAW,CAAC,SAAS,EAAAC,iBAAA,CAAE,WAAO;EAAEC,MAAM;EAAEC,IAAI;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAK;EAC7E,IAAIC,QAAQ;EAEZ,IAAI;IACF,IAAIV,KAAK,CAACW,IAAI,EAAE,MAAMX,KAAK,CAACW,IAAI;IAEhCD,QAAQ,GAAG;MAAEE,MAAM,QAAQV,aAAa,CAACM,MAAM,EAAEC,OAAO;IAAE,CAAC;EAC7D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdH,QAAQ,GAAG;MAAEG,KAAK;MAAEC,SAAS,EAAAC,MAAA,CAAAC,MAAA,KAAOH,KAAK;IAAG,CAAC;EAC/C;EAEA,IAAI;IACFN,IAAI,CAACU,WAAW,CAACP,QAAQ,CAAC;EAC5B,CAAC,CAAC,OAAAQ,OAAA,EAAM;IACNX,IAAI,CAACU,WAAW,CAAC;MACfJ,KAAK,EAAE,IAAIM,KAAK,CAAC,kCAAkC;IACrD,CAAC,CAAC;EACJ,CAAC,SAAS;IACRZ,IAAI,CAACa,KAAK,EAAE;IACZC,OAAO,CAACC,KAAK,CAAChB,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3Be,OAAO,CAACE,MAAM,CAACjB,MAAM,EAAE,CAAC,CAAC;EAC3B;AACF,CAAC,EAAC"}
=======
{"version":3,"names":["babel","require","handleMessage","parentPort","addListener","signal","port","action","payload","response","init","result","error","errorData","postMessage","Error","close","Atomics","store","notify"],"sources":["../../src/worker/index.cjs"],"sourcesContent":["const babel = require(\"./babel-core.cjs\");\nconst handleMessage = require(\"./handle-message.cjs\");\n\nconst { parentPort } = require(\"worker_threads\");\n\nparentPort.addListener(\"message\", async ({ signal, port, action, payload }) => {\n  let response;\n\n  try {\n    if (babel.init) await babel.init;\n\n    response = { result: await handleMessage(action, payload) };\n  } catch (error) {\n    response = { error, errorData: { ...error } };\n  }\n\n  try {\n    port.postMessage(response);\n  } catch {\n    port.postMessage({\n      error: new Error(\"Cannot serialize worker response\"),\n    });\n  } finally {\n    port.close();\n    Atomics.store(signal, 0, 1);\n    Atomics.notify(signal, 0);\n  }\n});\n"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,sBAAD,CAA7B;;AAEA,MAAM;EAAEE;AAAF,IAAiBF,OAAO,CAAC,gBAAD,CAA9B;;AAEAE,UAAU,CAACC,WAAX,CAAuB,SAAvB,oBAAkC,WAAO;EAAEC,MAAF;EAAUC,IAAV;EAAgBC,MAAhB;EAAwBC;AAAxB,CAAP,EAA6C;EAC7E,IAAIC,QAAJ;;EAEA,IAAI;IACF,IAAIT,KAAK,CAACU,IAAV,EAAgB,MAAMV,KAAK,CAACU,IAAZ;IAEhBD,QAAQ,GAAG;MAAEE,MAAM,QAAQT,aAAa,CAACK,MAAD,EAASC,OAAT;IAA7B,CAAX;EACD,CAJD,CAIE,OAAOI,KAAP,EAAc;IACdH,QAAQ,GAAG;MAAEG,KAAF;MAASC,SAAS,oBAAOD,KAAP;IAAlB,CAAX;EACD;;EAED,IAAI;IACFN,IAAI,CAACQ,WAAL,CAAiBL,QAAjB;EACD,CAFD,CAEE,gBAAM;IACNH,IAAI,CAACQ,WAAL,CAAiB;MACfF,KAAK,EAAE,IAAIG,KAAJ,CAAU,kCAAV;IADQ,CAAjB;EAGD,CAND,SAMU;IACRT,IAAI,CAACU,KAAL;IACAC,OAAO,CAACC,KAAR,CAAcb,MAAd,EAAsB,CAAtB,EAAyB,CAAzB;IACAY,OAAO,CAACE,MAAR,CAAed,MAAf,EAAuB,CAAvB;EACD;AACF,CAtBD"}
>>>>>>> 673f6c3a713c3c5a521125c5e4ea6135afefe034
